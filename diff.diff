diff --git a/client/src/screens/dashboard/dashboard-budgeting/dashboard-bugeting.jsx b/client/src/screens/dashboard/dashboard-budgeting/dashboard-bugeting.jsx
index f2a66d0..6edff9a 100644
--- a/client/src/screens/dashboard/dashboard-budgeting/dashboard-bugeting.jsx
+++ b/client/src/screens/dashboard/dashboard-budgeting/dashboard-bugeting.jsx
@@ -9,34 +9,47 @@ const DashboardBudgetingPage = () => {
   const [options, setOptions] = useState([])
 
   useEffect(() => {
-    API.getBudgetBreakdown()
-      .then(response => {
-        setData(response.data.data.data)
-        setOptions(response.data.data.options)
-      })
-      .catch(err => console.log(err))
-  },[])
+    // API.getBudgetBreakdown()
+    //   .then(response => {
+    //     setData(response.data.data.data)
+    //     setOptions(response.data.data.options)
+    //   })
+    //   .catch(err => console.log(err))
+  }, [])
 
   return (
     <>
-      <h3 style={{ textAlign: 'center' }}>Budgetting</h3>
+      {/* <h3 style={{ textAlign: 'center' }}>Budgetting</h3>
       <BoxContainer>
         <h6>
           Budgeting -- Developing
         </h6>
-        <StackedBarChart data={data} options={options}  />
-      </BoxContainer>
+        <CheckBox label={'Food'} />
+        <StackedBarChart data={data} options={options} />
+      </BoxContainer> */}
     </>
   )
 }
 
 // Testing stacked bar chart
-const StackedBarChart = ({ data, options }) => {
-  return (
-    <>
-      <Bar data={data} options={options} />
-    </>
-  )
-}
+// const StackedBarChart = ({ data, options }) => {
+//   return (
+//     <>
+//       <Bar data={data} options={options} />
+//     </>
+//   )
+// }
+
+
+
+// a reusable component for the category checkbox
+// const CheckBox = ({ label }) => {
+//   return (
+//     <div style={{ backgroundColor:'lightgrey', borderRadius:'5px', display: 'inline-block', padding:'5px 8px' }}>
+//       <input style={{ height:15, width:15, verticalAlign:'middle' }} type="checkbox" />
+//       <label style={{ margin: '0px 5px', verticalAlign:'middle' }}>{label}</label>
+//     </div>
+//   )
+// }
 
 export default DashboardBudgetingPage;
\ No newline at end of file
diff --git a/server/src/controllers/budgetController.js b/server/src/controllers/budgetController.js
index 09ba4e8..6e78acb 100644
--- a/server/src/controllers/budgetController.js
+++ b/server/src/controllers/budgetController.js
@@ -15,7 +15,7 @@ const getBudgetBreakdown = (req, res, next) => {
     const arbitraryStackKey = "stack1";
     // mock data
     const data = {
-        labels: ['Week of 01/01', 'Week of 01/08', 'Week of 01/13', 'Week of 01/20', 'Week of 01/27'],
+        labels: ['October', 'September', 'August', 'July', 'June'],
         datasets: [
             // These two will be in the same stack.
             {
